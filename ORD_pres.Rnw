\documentclass[serif]{beamer}
\usetheme{Boadilla}
\usetheme{Boadilla}
\usepackage{graphicx}
\usepackage[final]{animate}
\usepackage{breqn}
\usepackage{xcolor}
\usepackage{booktabs}
\usepackage{tikz}
\usetikzlibrary{decorations.pathreplacing}
\usetikzlibrary{shapes,arrows,positioning,shadows}
\definecolor{links}{HTML}{2A1B81}
\hypersetup{colorlinks,linkcolor=links,urlcolor=links}
\usepackage{subfig}
\usepackage{pgf}

% knitr and global options
<<setup, include = F, cache = F>>=
library(knitr)
# global knitr options
opts_chunk$set(fig.path = 'fig/', fig.align = 'center', fig.show = 'hold', message = FALSE, dev = 'pdf', dev.args = list(family = 'serif'), fig.pos = '!ht', warning = FALSE, cache = TRUE, prompt = TRUE, background = '#EDF8FB')
# chunk hook for par
knit_hooks$set(par = function(before, options, envir){
  if (before && options$fig.show!='none') par(mar=c(4,4,.1,.1))
})
#global R optoins
options(replace.assign = TRUE, width = 60, digits = 1)
@

% load R libraries
<<eval = T, echo = F, cache = F, message = F>>=
library(SWMPr)
# devtools::load_all('M:/docs/SWMPr')
library(RColorBrewer)
library(scales)
@

% custom colors, do not cache
<<mypal, echo = F, results = 'asis', cache = F>>=
pal <- function(x) brewer.pal(x, 'BuGn')
num_col <- 5

for(i in 1:num_col){
 
  col.nm <- paste0('mypal',i)
  hexa <- paste0(gsub('#', '', pal(5)[i]))
  cat(paste0('\\definecolor{', col.nm,'}{HTML}{',hexa,'}'))
  
}

bg_col <- pal(num_col)[1]

pdf('fig/back_tmp.pdf',bg = bg_col)
frame()
invisible(dev.off())
@

% my custom ggplot theme
<<my_ggplot, echo = F, results = 'hide' , message = F>>=
theme_mine <- function (base_size = 12, base_family = "") {
  theme_bw(base_size = base_size, base_family = base_family) %+replace% 
  theme(
    plot.background = element_rect(fill='transparent', 
      colour = NA),
    panel.background = element_rect(fill='transparent', 
      colour = NA),
    legend.background = element_rect(fill='transparent', 
      colour = NA),
    strip.background = element_rect(fill = 
        alpha(pal(5)[5],0.5)),
    legend.key = element_rect(fill = 'transparent', 
      colour = NA)
    )   
}

# set as default
theme_set(theme_mine())
@

% colors and macros
\setbeamercolor{title}{fg=mypal5} % main title
\setbeamercolor{frametitle}{fg=mypal4, bg=mypal2} % frame titles
\setbeamercolor{structure}{fg=mypal4} % bottom banner
\setbeamercolor{normal text}{fg=mypal5}
\usebackgroundtemplate{\includegraphics[height=\paperheight,width=\paperwidth]{fig/back_tmp.pdf}}

\tikzstyle{block} = [rectangle, draw, text width=9em, text centered, rounded corners, minimum height=3em, minimum width=7em, top color = white, bottom color=brown!30,  drop shadow]

\newcommand{\ShowSexpr}[1]{\texttt{{\char`\\}Sexpr\{#1\}}}

\newcommand{\Bigtxt}[1]{\textbf{\textit{#1}}}

\setbeamertemplate{enumerate items}[circle]

\begin{document}

\title[SWMPr for estuarine time series]{\includegraphics[width=0.9\textwidth]{fig/swmpr_logo.png}}

\author[M. Beck]{Marcus W. Beck}

\date{May 8, 2015}

\institute[]{ORISE, USEPA NHEERL Gulf Ecology Division\\ Phone: 8509342480, Email: \href{mailto:beck.marcus@epa.gov}{beck.marcus@epa.gov}}

%%%%%%
\begin{frame}
\titlepage
\end{frame}

\section{Background}

%%%%%%
\begin{frame}{What is NERRS/SWMP?}{}
{\bf NERRS}\\
National Estuarine Research Reserve System, established by Coastal Zone Management Act of 1972. Focus on \Bigtxt{long-term research}, \Bigtxt{monitoring}, \Bigtxt{education}, and \Bigtxt{stewardship} for more effective coastal management.\\~\\
{\bf SWMP}\\
System Wide Monitoring Program, initiated in 1995 to provide \Bigtxt{continuous monitoring} data at over 140 stations in each of the 28 NERRS reserves \\~\\
\end{frame}

%%%%%%
\begin{frame}{What is NERRS/SWMP?}
\centerline{\includegraphics[width = 0.9\textwidth]{fig/NERRS_locations.png}}
\tiny
\flushright
\href{http://nerrs.noaa.gov/ReservesMap.aspx}{http://nerrs.noaa.gov/ReservesMap.aspx}
\end{frame}

%%%%%%
\begin{frame}[t]{What is NERRS/SWMP?}
Data maintained by the Centralized Data Management Office (\href{http://cdmo.baruch.sc.edu/}{CDMO})\\~\\
\centerline{\includegraphics[width = \textwidth]{fig/cdmo_front.png}}
\end{frame}

%%%%%%
\begin{frame}{What is NERRS/SWMP?}
Each reserve has fixed, continuous monitoring stations for \Bigtxt{water quality} (15 min), \Bigtxt{meteorology} (15 min), and \Bigtxt{nutrients} (monthly)\\~\\
CDMO is an existing data management infrastructure for SWMP:\\~\\
\begin{itemize}
\item Automated QAQC \\~\\
\item Numerous data download options \\~\\
\item Web services/API for remote data upload/retrieval \\~\\
\item Simple viz tools \\~\\
\end{itemize}
\end{frame}

%%%%%%
\begin{frame}[t]{What is NERRS/SWMP?}
As of May 1, $>$ 58 million SWMP data records available from CDMO\\~\\
Raw data will look like this...\\~\\
\centerline{\includegraphics[width = 0.9\textwidth]{fig/qaqc_ex.png}}
\end{frame}

%%%%%%
\begin{frame}{What is the problem?}
An invaluable data source but no recent comparative analyses, need for tools for simple trend analysis \\~\\
Some specific issues:\\~\\
\begin{itemize}
\item Getting the data into an analysis program
\item Dealing with QAQC columns or removing `bad' observations
\item Combining data for comparison
\item Issues inherent with time series, e.g., signal vs. noise, data quantity
\item ...and analysis
\end{itemize}
\end{frame}

\section{SWMPr description}

%%%%%%
\begin{frame}[fragile]{What is the (potential) solution?}
\centerline{\includegraphics[width = 0.8\textwidth]{fig/swmpr_logo.png}}
\vspace{0.15in}
An R package for SWMP data, SWMPr v2.0.0 is officially released!
<<eval = F>>=
install.packages('SWMPr')
library(SWMPr)
@
Still in development, currently on v2.0.5
\end{frame}

%%%%%%
\begin{frame}[fragile]{SWMPr is fully documented}
\centerline{\includegraphics[width = 0.75\textwidth]{fig/swmpr_manual.png}}
\end{frame}

%%%%%%
\begin{frame}[fragile]{SWMPr is fully documented}
\centerline{\includegraphics[width = 0.75\textwidth]{fig/help_ex.png}}
\end{frame}

%%%%%%
\begin{frame}[t]{What can SWMPr do?}
SWMPr functions are grouped into three categories that describe their use in the `data workflow'
\begin{center}
\begin{tikzpicture}[node distance=2.5cm, auto, >=stealth]
	\node[block] (a) {\Bigtxt{1) Retrieve}};
	\node[block] (b)  [right of=a, node distance=4.2cm] {\Bigtxt{2) Organize}};
 	\draw[->] (a) -- (b);
 	\node[block] (c)  [right of=b, node distance=4.2cm]  {\Bigtxt{3) Analyze}};
 	\draw[->] (b) -- (c);
\end{tikzpicture}
\end{center}
\begin{columns}[t]
\begin{column}{0.3\textwidth}
\small{
\begin{itemize}
\item Retrieve metadata \\~\\
\item Import from CDMO into R
\end{itemize}
}
\end{column}
\begin{column}{0.3\textwidth}
\small{
\begin{itemize}
\item Manipulate data for analysis \\~\\
\item Functions to clean, combine, change time step, etc.
\end{itemize}
}
\end{column}
\begin{column}{0.3\textwidth}
\small{
\begin{itemize}
\item Generic to specific applications\\~\\
\item Visualization and graphics
\end{itemize}
}
\end{column}
\end{columns}
\end{frame}

%%%%%%
\begin{frame}[fragile]{What can SWMPr do?}
Function types are searchable in R:
<<eval = F>>=
help.search('analyze', package = 'SWMPr')
@
\centerline{\fbox{\includegraphics[width = 0.6\textwidth]{fig/searches.png}}}
\end{frame}

%%%%%%
\begin{frame}{How are data \Bigtxt{retrieved}?}
SWMPr functions can be used to import data into R three ways\\~\\
\begin{enumerate}
\item Import from a local path \\~\\
\item Retrieve SWMP data from a \href{https://s3.amazonaws.com/swmpalldata/}{third-party server} \\~\\
\item Call the existing CDMO \href{http://cdmo.baruch.sc.edu/webservices.cfm}{web services} to import directly\\~\\
\end{enumerate}
Multiple options to accommodate different types of users \\~\\
Bridges the gap from CDMO to analysis software
\end{frame}

%%%%%%
\begin{frame}[fragile,t,shrink]{How are data \Bigtxt{retrieved}?}
The end result is the same - data are imported as a \texttt{swmpr} data object
<<size = 'small'>>=
dat <- import_remote('kacsswq')
class(dat)
head(dat, 1)
names(attributes(dat))
@
\end{frame}

%%%%%%
\begin{frame}[fragile,t]{How are data \Bigtxt{retrieved}?}
The remaining functions have \texttt{swmpr} methods
<<size='small'>>=
methods(class = 'swmpr')
@
These are functions that were written for, and work specifically, with \texttt{swmpr} objects \\~\\
\texttt{swmpr} objects can also use methods from the basic data frame class, i.e., you can exit the SWMPr workflow at any time
\end{frame}

%%%%%%
\begin{frame}[fragile,t]{How are data \Bigtxt{organized}?}
Data organization depends on the analysis needs - it is usually tedious \\~\\
Example: Filter by QAQC flags\\~\\
\begin{itemize}
\item Remove observations with a specified QAQC flag value
\item Remove QAQC columns: \href{http://cdmo.baruch.sc.edu/data/qaqc.cfm}{Link} to QAQC codes \\~\\
\end{itemize}
\centerline{\fbox{\includegraphics[width = 0.8\textwidth]{fig/qaqc_flags.png}}}
\end{frame}

%%%%%%
\begin{frame}[containsverbatim,shrink]{Retrieve SWMP data}
Raw data with QAQC columns
<<size = 'small', echo = FALSE>>=
# View the first six rows of the met data
data(apacpwq)
head(apacpwq, 3)
@
\end{frame}

%%%%%%
\begin{frame}[containsverbatim]{Organize SWMP data}
Data in red are `bad' QAQC flags
<<qaqc_ex1, fig.height = 2.5, fig.width = 8, out.width = '0.9\\textwidth', results = 'hold', echo = F>>=
# select values that did not pass qaqc
dat <- apacpwq
var <- 'temp'
nopass <- grep('0', dat[, paste0('f_', var)], invert = T)
nopass <- dat[nopass, ]

# plot
par(mar = c(4, 4, 1, 0.5))
plot(dat$datetimestamp, dat[, var], xlab = 'Date', ylab = var, type = 'l', ylim = c(10, 50))

# add  points that did not pass qaqc
points(nopass$datetimestamp, nopass[, var], col = 'red')
@
After using \texttt{qaqc} function
<<qaqc_ex2, fig.height = 2.5, fig.width = 8, results = 'hold', echo = F, out.width = '0.9\\textwidth',>>=
# run qaqc
dat <- qaqc(apacpwq)

# plot
par(mar = c(4, 4, 1, 0.5))
plot(dat$datetimestamp, dat[, var], xlab = 'Date', ylim = c(10, 50), ylab = var, type = 'l')
@
\end{frame}

%%%%%%
\begin{frame}[fragile]{How are data \Bigtxt{organized}?}
Example: Combine data to compare time series from different sites\\~\\
\begin{itemize}
\item Data may have arbitrary time steps that do not match between sites \\~\\
\item Date ranges may also differ \\~\\
\end{itemize}
The \texttt{comb} function addresses these issues! \\~\\
<<>>=
# import all weather and wq data for Apalachicola
met <- import_remote('apaebmet')
wq <- import_remote('apacpwq')
@
\end{frame}

%%%%%%
\begin{frame}[fragile]{How are data \Bigtxt{organized}?}
<<size = 'small'>>=
dim(met)
dim(wq)
# standardize time step to two hours
# combine only overlapping time ranges
dat <- comb(wq, met, timestep = 120, method = 'intersect')
dim(dat)
@
\end{frame}

%%%%%%
\begin{frame}[fragile]{How are data \Bigtxt{organized}?}
The combined dataset
<<size = 'small', echo = F>>=
head(dat, 4)
@
\end{frame}

%%%%%
\begin{frame}{How are data \Bigtxt{analyzed}?}
Time series analysis can range from very general to very specific \\~\\
SWMPr functions include...\\~\\
\begin{columns}[t]
\begin{column}{0.45\textwidth}
\Bigtxt{General} \\~\\
\begin{itemize}
\item Approximate missing data
\item Smoothing with moving windows
\item Aggregate by time periods
\item Basic plots and histograms
\end{itemize}
\end{column}
\begin{column}{0.45\textwidth}
\Bigtxt{Specific} \\~\\
\begin{itemize}
\item Time series decomposition
\item Estimate net ecosystem metabolism
\item Aggregate metabolism
\item Summary plots of raw data
\end{itemize}
\end{column}
\end{columns}
\vspace{0.3in}
...or exit the SWMPr workflow and evaluate with other R packages
\end{frame}

%%%%%
\begin{frame}[fragile]{How are data \Bigtxt{analyzed}?}
Example: fill missing data \\~\\
<<'/filled', fig.width = 8, fig.height = 2, size = 'scriptsize', par = T, , echo = F, out.width = '0.85\\textwidth'>>=
# import, organize
data(apadbwq)
dat <- qaqc(apadbwq)
dat <- subset(dat, select = 'do_mgl', 
  subset = c('2013-01-22 00:00', '2013-01-26 00:00')
  )

# interpolate, plot
filled <- na.approx(dat, params = 'do_mgl', maxgap =100)
plot(filled, col = 'red'); lines(dat, lwd = 2)
@
Example: smooth data \\~\\
<<'/smooth', fig.width = 8, fig.height = 2, size = 'scriptsize', par = T, echo = F, out.width = '0.85\\textwidth'>>=
# import, organize
data(apadbwq)
dat <- qaqc(apadbwq)
dat <- subset(dat, select = 'do_mgl', 
  subset = c('2012-07-09 00:00', '2012-07-24 00:00')
  )

# smooth, plot
dat_smooth <- smoother(dat, window = 50, params = 'do_mgl')
plot(dat); lines(dat_smooth, col = 'red', lwd = 2)
@
\end{frame}

%%%%%%
\begin{frame}[fragile]{How are data \Bigtxt{analyzed}?}
Example: time series decomposition (chl-a at cbmocnut)\\~\\
<<'decomp_dep', eval = T, echo = F, fig.height = 5, fig.width = 8, out.width = '0.85\\textwidth'>>=
# import, organize

dat <- import_remote('cbmocnut')
dat <- subset(dat, select = 'chla_n')
dat$chla_n <- log(dat$chla_n)

# additive decompision of chl
out <- decomp_cj(dat, 'chla_n', type = 'add')
out <- out + theme_mine()
out
@
\end{frame}

%%%%%%
\begin{frame}[fragile]{How are data \Bigtxt{analyzed}?}
Example: estimate ecosystem metabolism
<<'/ecometab_dep', echo = F, cache = T>>=
## import water quality and weather data, combine
wq <- import_remote('apadbwq')
met <- import_remote('apaebmet')
dat <- comb(wq, met)
res <- ecometab(dat, metab_units = 'grams')
@
<<'/ecometab1', fig.width = 8, fig.height = 2.5, out.width = '0.95\\textwidth', echo = F>>=
plot_metab(res, by = 'months') + theme_mine() + scale_y_continuous('Monthly', limits = c(-10, 10)) + theme(axis.title.x = element_blank())
@
<<'/ecometab2', fig.width = 8, fig.height = 2.5, out.width = '0.95\\textwidth', echo = F>>=
plot_metab(res, by = 'quarters') + theme_mine() + scale_y_continuous('Quarterly', limits = c(-10, 10)) + theme(axis.title.x = element_blank())
@
\end{frame}

\section{SWMPr applications}

%%%%%%
\begin{frame}[fragile]{SWMPr applications}
The most common question - what is the change over time at my site? \\~\\
The functions in SWMPr can help, but it's easier to interact!\\~\\
Two online applications can help visualize trends \\~\\
\begin{columns}[t]
\begin{column}{0.45\textwidth}
\centerline{\Bigtxt{\href{https://beckmw.shinyapps.io/swmp_summary}{Summary plots}}}
\centerline{\fbox{\includegraphics[width = 0.9\textwidth]{fig/swmp_summary.png}}}
\end{column}
\begin{column}{0.45\textwidth}
\centerline{\Bigtxt{\href{https://beckmw.shinyapps.io/swmp_comp}{Trends map}}}
\centerline{\fbox{\includegraphics[width = 0.935\textwidth]{fig/swmp_comp.png}}}
\end{column}
\end{columns}
\end{frame}

%%%%%%
\begin{frame}[t]{SWMPr applications}
\href{https://swmprats.net}{SWMPrats.net}: \Bigtxt{S}ystem-\Bigtxt{W}ide \Bigtxt{M}onitoring \Bigtxt{P}rogram \Bigtxt{R}esources for the \Bigtxt{A}nalysis of \Bigtxt{T}ime \Bigtxt{S}eries \\~\\
\centerline{\fbox{\includegraphics[width = 0.75\textwidth]{fig/swmprats_home.png}}}
\end{frame}

%%%%%%
\begin{frame}{SWMPr applications}
The SWMPr package provides an R-centric approach to \Bigtxt{retrieve}, \Bigtxt{organize}, and \Bigtxt{analyze} estuary data \\~\\
A new program, but already seeing heavy use:\\~\\
\begin{itemize}
\item SWMPr downloaded 359 times from R network (as of May 7) \\~\\
\item Apps used 347 hours in April \\~\\
\end{itemize}
SWMPr is meant to \Bigtxt{augment}, not replace, existing data management programs (i.e., CDMO web services) \\~\\
Deals with lots of the heavy lifting with large, unrefined datasets - greatly improves accessibility for analysis \\~\\
\end{frame}

\end{document}
